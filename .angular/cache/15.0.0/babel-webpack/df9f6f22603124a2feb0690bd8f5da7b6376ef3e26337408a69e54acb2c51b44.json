{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"../http.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction LoginComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵtext(1, \"The Email Id is invalid !!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵtext(1, \"The Password is invalid !!\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(router, toastr, user) {\n    this.router = router;\n    this.toastr = toastr;\n    this.user = user;\n    this.myGroup = new FormGroup({\n      'name': new FormControl(''),\n      'mobilenumber': new FormControl(''),\n      'email': new FormControl('', [Validators.required]),\n      'password': new FormControl('', [Validators.required]),\n      'address': new FormControl('')\n    });\n  }\n  get email() {\n    return this.myGroup.get('email');\n  }\n  get password() {\n    return this.myGroup.get('password');\n  }\n  ngOnInit() {}\n  submit() {\n    let obj = {\n      email: this.email.value,\n      password: this.password.value\n    };\n    this.user.verifyLoginDetails(obj).subscribe(res => {\n      console.log(\"API RESPONSE for verifying login details\", res);\n      if (res.status == '200') {\n        console.log('1 login res: ', res.status);\n        this.toastr.success(\"You have successfully logged in !\");\n        localStorage.setItem('userEmail', JSON.stringify(obj.email));\n        localStorage.setItem('status', JSON.stringify(res.status));\n        localStorage.setItem('token', JSON.stringify(res.token));\n        this.router.navigateByUrl('books');\n      } else {\n        console.log('2 login res: ', res.status);\n        this.toastr.error(\"Invalid email or password !! \\nPlease enter valid details.\");\n        localStorage.setItem('status', JSON.stringify(res.status));\n        this.router.navigateByUrl('');\n      }\n    });\n  }\n  onClick() {\n    this.router.navigateByUrl('register');\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.HttpService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 24,\n    vars: 4,\n    consts: [[1, \"flex\", \"m-auto\", \"h-screen\", \"justigy-center\"], [1, \"p-4\", \"rounded-lg\", \"border\", \"m-auto\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\", 1, \"label-control\"], [\"type\", \"text\", \"placeholder\", \"Enter email\", \"formControlName\", \"email\", 1, \"form-control\", \"p-1\", \"rounded\", \"border\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [\"for\", \"password\", 1, \"label-control\"], [\"type\", \"password\", \"placeholder\", \"Enter password\", \"formControlName\", \"password\", 1, \"form-control\", \"p-1\", \"rounded\", \"border\", \"align-right\"], [\"type\", \"submit\", 1, \"p-2\", \"w-full\", \"bg-purple-700\", \"text-white\", 3, \"disabled\"], [3, \"click\"], [2, \"color\", \"red\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\", 3);\n        i0.ɵɵtext(4, \"Email: \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 4)(6, \"br\");\n        i0.ɵɵtemplate(7, LoginComponent_span_7_Template, 2, 0, \"span\", 5);\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"br\");\n        i0.ɵɵelementStart(10, \"div\", 2)(11, \"label\", 6);\n        i0.ɵɵtext(12, \"Password: \\u00A0\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 7)(14, \"br\");\n        i0.ɵɵtemplate(15, LoginComponent_span_15_Template, 2, 0, \"span\", 5);\n        i0.ɵɵelement(16, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"br\");\n        i0.ɵɵelementStart(18, \"div\");\n        i0.ɵɵelement(19, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\");\n        i0.ɵɵtext(21, \"Are you a new user? \\u00A0 \");\n        i0.ɵɵelementStart(22, \"a\", 9);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_a_click_22_listener() {\n          return ctx.onClick();\n        });\n        i0.ɵɵtext(23, \"Create Account\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.myGroup);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.email && ctx.email.invalid && ctx.email.touched);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.password && ctx.password.invalid && ctx.password.touched);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", ctx.myGroup.invalid);\n      }\n    },\n    dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName]\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}