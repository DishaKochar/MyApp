{"ast":null,"code":"import { PasswordValidators } from './../PasswordValidators';\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"../http.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nfunction RegisterComponent_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtext(1, \"The name is invalid !!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtext(1, \"The Mobile No. is invalid !!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RegisterComponent_span_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtext(1, \"The address is invalid !!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_span_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtext(1, \"The Password is invalid !!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_span_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtext(1, \"The Confirm Password is invalid !!\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class RegisterComponent {\n  constructor(router, toastr, user) {\n    this.router = router;\n    this.toastr = toastr;\n    this.user = user;\n    this.register = new FormGroup({\n      'name': new FormControl('', [Validators.required]),\n      'mobilenumber': new FormControl('', [Validators.required, Validators.minLength(10)]),\n      'email': new FormControl('', [Validators.required, Validators.email]),\n      'password': new FormControl(null, Validators.compose([Validators.required, Validators.minLength(6), Validators.maxLength(12), PasswordValidators.patternValidator(new RegExp(\"(?=.*[0-9])\"), {\n        requiresDigit: true\n      }), PasswordValidators.patternValidator(new RegExp(\"(?=.*[A-Z])\"), {\n        requiresUppercase: true\n      }), PasswordValidators.patternValidator(new RegExp(\"(?=.*[a-z])\"), {\n        requiresLowercase: true\n      }), PasswordValidators.patternValidator(new RegExp(\"(?=.*[$@^!%*?&])\"), {\n        requiresSpecialChars: true\n      })])),\n      //'password': new FormControl('',[Validators.required,Validators.minLength(4)]),\n      'confirmpassword': new FormControl('', [Validators.required, Validators.minLength(4)]),\n      'address': new FormControl('', [Validators.required, Validators.minLength(10)])\n    });\n  } //,private user:HttpService\n  get name() {\n    return this.register.get('name');\n  }\n  get mobilenumber() {\n    return this.register.get('mobilenumber');\n  }\n  get email() {\n    return this.register.get('email');\n  }\n  get password() {\n    return this.register.get('password');\n  }\n  get confirmpassword() {\n    return this.register.get('confirmpassword');\n  }\n  get address() {\n    return this.register.get('address');\n  }\n  // regDetails(regDetails: any){\n  //   this.user.addRegDetails(regDetails).subscribe(res=>{\n  //     console.log(\"register response for post\",res);\n  //   })\n  // }\n  submit() {\n    let obj = {\n      name: this.name.value,\n      mobilenumber: this.mobilenumber.value,\n      email: this.email.value,\n      password: this.password.value,\n      confirmpassword: this.confirmpassword.value,\n      address: this.address.value,\n      wallet: 5000,\n      verification: false\n    };\n    if (obj.password == obj.confirmpassword) {\n      console.log('obj data:', obj);\n      localStorage.setItem('user1', JSON.stringify(obj));\n      //httpService call for post request\n      this.user.addRegDetails(obj).subscribe(res => {\n        if (res.status == '404') {\n          console.log(\"register response for post\", res);\n          this.toastr.error(\"This email id is a Registered Email Id !!\");\n          this.router.navigateByUrl('/register');\n        } else {\n          this.toastr.success(\"You have successfully registered ! \\n Login to get started!!\");\n          // this.user.createCart(obj.email).subscribe(res=>{\n          //   console.log(\"Cart Created\",res);\n          //   // if(res.status == '200'){\n          //   //   console.log(\"Cart Created\",res);\n          //   // }\n          // })\n          this.router.navigateByUrl('');\n        }\n      });\n    } else {\n      this.toastr.error(\"Password and Confirm Password are different. \");\n    }\n  }\n  onClick() {\n    this.router.navigateByUrl('');\n  }\n  ngOnInit() {}\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.HttpService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 58,\n    vars: 9,\n    consts: [[1, \"flex\", \"m-auto\", \"h-screen\", \"justigy-center\"], [1, \"p-4\", \"rounded-lg\", \"border\", \"m-auto\", 3, \"formGroup\", \"ngSubmit\"], [\"regDetails\", \"ngForm\"], [1, \"form-group\", \"m-5\", \"w-full\"], [\"for\", \"name\"], [\"type\", \"name\", \"placeholder\", \"Enter your Full Name\", \"formControlName\", \"name\", 1, \"form-control\", \"p-1\", \"rounded\", \"border\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [\"for\", \"mobilenumber\"], [\"type\", \"text\", \"placeholder\", \"Enter Mobile number\", \"formControlName\", \"mobilenumber\", 1, \"form-control\", \"p-1\", \"rounded\", \"border\"], [1, \"form-group\", \"m-5\"], [\"for\", \"email\", 1, \"label-control\"], [\"appearance\", \"fill\", 1, \"example-full-width\"], [\"type\", \"email\", \"matInput\", \"\", \"formControlName\", \"email\", \"placeholder\", \"Enter Email Address\"], [4, \"ngIf\"], [\"for\", \"address\", 1, \"label-control\"], [\"type\", \"address\", \"placeholder\", \"Enter address\", \"formControlName\", \"address\", 1, \"form-control\", \"p-1\", \"rounded\", \"border\", \"align-right\"], [\"for\", \"password\", 1, \"label-control\"], [\"type\", \"password\", \"placeholder\", \"Enter password\", \"formControlName\", \"password\", 1, \"form-control\", \"p-1\", \"rounded\", \"border\", \"align-right\"], [\"for\", \"confirmpassword\", 1, \"label-control\"], [\"type\", \"password\", \"placeholder\", \"Confirm your password\", \"formControlName\", \"confirmpassword\", 1, \"form-control\", \"p-1\", \"rounded\", \"border\", \"align-right\"], [\"type\", \"submit\", 1, \"p-2\", \"w-full\", \"bg-purple-700\", \"text-white\", 3, \"disabled\"], [3, \"click\"], [2, \"color\", \"red\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\", 4);\n        i0.ɵɵtext(5, \"Your name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"br\")(7, \"input\", 5)(8, \"br\");\n        i0.ɵɵtemplate(9, RegisterComponent_span_9_Template, 2, 0, \"span\", 6);\n        i0.ɵɵelement(10, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 3)(12, \"label\", 7);\n        i0.ɵɵtext(13, \"Mobile Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"br\")(15, \"input\", 8)(16, \"br\");\n        i0.ɵɵtemplate(17, RegisterComponent_span_17_Template, 2, 0, \"span\", 6);\n        i0.ɵɵelement(18, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 9)(20, \"label\", 10);\n        i0.ɵɵtext(21, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"br\");\n        i0.ɵɵelementStart(23, \"mat-form-field\", 11);\n        i0.ɵɵelement(24, \"input\", 12);\n        i0.ɵɵtemplate(25, RegisterComponent_mat_error_25_Template, 2, 0, \"mat-error\", 13);\n        i0.ɵɵtemplate(26, RegisterComponent_mat_error_26_Template, 4, 0, \"mat-error\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"div\", 9)(28, \"label\", 14);\n        i0.ɵɵtext(29, \"Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"br\")(31, \"input\", 15)(32, \"br\");\n        i0.ɵɵtemplate(33, RegisterComponent_span_33_Template, 2, 0, \"span\", 6);\n        i0.ɵɵelement(34, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 9)(36, \"label\", 16);\n        i0.ɵɵtext(37, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(38, \"br\")(39, \"input\", 17)(40, \"br\");\n        i0.ɵɵtemplate(41, RegisterComponent_span_41_Template, 2, 0, \"span\", 6);\n        i0.ɵɵelement(42, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"div\", 9)(44, \"label\", 18);\n        i0.ɵɵtext(45, \"Confirm Password: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(46, \"br\")(47, \"input\", 19)(48, \"br\");\n        i0.ɵɵtemplate(49, RegisterComponent_span_49_Template, 2, 0, \"span\", 6);\n        i0.ɵɵelement(50, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(51, \"br\");\n        i0.ɵɵelementStart(52, \"div\");\n        i0.ɵɵelement(53, \"input\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(54, \"div\");\n        i0.ɵɵtext(55, \"Already have an account? \\u00A0\");\n        i0.ɵɵelementStart(56, \"a\", 21);\n        i0.ɵɵlistener(\"click\", function RegisterComponent_Template_a_click_56_listener() {\n          return ctx.onClick();\n        });\n        i0.ɵɵtext(57, \"Login\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.register);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.name && ctx.name.invalid && ctx.name.touched);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.mobilenumber && ctx.mobilenumber.invalid && ctx.mobilenumber.touched);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.register.controls.email.hasError(\"email\") && !ctx.register.controls.email.hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.register.controls.email.hasError(\"required\"));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.address && ctx.address.invalid && ctx.address.touched);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.password && ctx.password.invalid && ctx.password.touched);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.confirmpassword && ctx.confirmpassword.invalid && ctx.confirmpassword.touched);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", ctx.register.invalid);\n      }\n    },\n    dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, i6.MatError, i6.MatFormField, i7.MatInput]\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}